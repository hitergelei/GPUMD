LAMMPS (29 Aug 2024 - Update 3)
# LAMMPS input for ADP verification with stress calculation
# Generate reference data for comparison with GPUMD

# Initialize
units metal
dimension 3
boundary p p p
atom_style atomic
read_data  Ta3Cu.dat
Reading data file ...
  triclinic box = (0 0 0) to (4.013014 4.013014 8.41634) with tilt (-2e-16 0 0)
  1 by 1 by 1 MPI processor grid
  reading atoms ...
  8 atoms
  read_data CPU = 0.001 seconds
#lattice  bcc  3.31
#region box block 0 3 0 3 0 3
#create_box 1 box
#create_atoms 1 box

#mass 1 47.867    # titanium

# Use the same ADP potential
pair_style adp
#pair_coeff * *  Ta.adp.txt  Ta
pair_coeff * * CuTa_LJ15_2014.adp.txt  Ta Cu

# Set same temperature as GPUMD test
#velocity all create 300.0 12345
velocity all create 0.0001 12345

# Compute per-atom potential energy
compute eng all pe/atom
compute eatoms all reduce sum c_eng
compute pe all pe/atom

# Compute stress tensor
compute stress_tensor all stress/atom NULL virial
compute global_stress all reduce sum c_stress_tensor[1] c_stress_tensor[2] c_stress_tensor[3] c_stress_tensor[4] c_stress_tensor[5] c_stress_tensor[6]

# Set timestep and ensemble
timestep 0.001
fix 1 all nve

neighbor 0 bin

# Output settings
thermo 1
thermo_style custom step etotal pe lx ly lz press pxx pyy pzz pxy pxz pyz vol

# Dump forces, energies and stress for first step
dump 1 all custom 1 lammps_Cu3Ta_reference.dump id element type x y z fx fy fz c_pe c_stress_tensor[1] c_stress_tensor[2] c_stress_tensor[3] c_stress_tensor[4] c_stress_tensor[5] c_stress_tensor[6]
dump_modify 1 element Ta Cu  sort id

# Run for 0 steps to get initial configuration stress
run 0
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 6.150959
  ghost atom cutoff = 6.150959
  binsize = 3.0754795, bins = 2 2 3
  1 neighbor lists, perpetual/occasional/extra = 1 0 0
  (1) pair adp, perpetual
      attributes: half, newton on
      pair build: half/bin/atomonly/newton/tri
      stencil: half/bin/3d/tri
      bin: standard
Per MPI rank memory allocation (min/avg/max) = 6.588 | 6.588 | 6.588 Mbytes
   Step         TotEng         PotEng           Lx             Ly             Lz           Press           Pxx            Pyy            Pzz            Pxy            Pxz            Pyz           Volume    
         0  -53.49761      -53.49761       4.013014       4.013014       8.41634       -17353.935     -30857.5       -30857.5        9653.1951      1.7249612e-06  9.9791184e-05  0.0003481613   135.53911    
Loop time of 4.98e-07 on 1 procs for 0 steps with 8 atoms

0.0% CPU use with 1 MPI tasks x no OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0          | 0          | 0          |   0.0 |  0.00
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0          | 0          | 0          |   0.0 |  0.00
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 0          | 0          | 0          |   0.0 |  0.00
Other   |            | 4.98e-07   |            |       |100.00

Nlocal:              8 ave           8 max           8 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Nghost:            357 ave         357 max         357 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Neighs:            216 ave         216 max         216 min
Histogram: 1 0 0 0 0 0 0 0 0 0

Total # of neighbors = 216
Ave neighs/atom = 27
Neighbor list builds = 0
Dangerous builds = 0

# Print stress tensor components
# Note: LAMMPS outputs pressure (with positive compression)
# Virial stress = -pressure, so we need to flip signs
variable stress_xx equal -pxx
variable stress_yy equal -pyy
variable stress_zz equal -pzz
variable stress_xy equal -pxy
variable stress_xz equal -pxz
variable stress_yz equal -pyz

print "=== LAMMPS ADP Virial Stress Results ==="
=== LAMMPS ADP Virial Stress Results ===
print "Virial stress tensor (bar):"
Virial stress tensor (bar):
print "sigma_xx = ${stress_xx}"
sigma_xx = 30857.4996328524
print "sigma_yy = ${stress_yy}"
sigma_yy = 30857.4995118484
print "sigma_zz = ${stress_zz}"
sigma_zz = -9653.19510647439
print "sigma_xy = ${stress_xy}"
sigma_xy = -1.72496117524564e-06
print "sigma_xz = ${stress_xz}"
sigma_xz = -9.97911842506907e-05
print "sigma_yz = ${stress_yz}"
sigma_yz = -0.000348161299056867
print "Pressure = $(press)"
Pressure = -17353.934679408812372
print "Volume = $(vol)"
Volume = 135.53910741673738016

# Convert to GPa
# Method 1: From bar to GPa (1 bar = 1e-4 GPa)
variable stress_xx_gpa equal ${stress_xx}*1e-4
variable stress_xx_gpa equal 30857.4996328524*1e-4
variable stress_yy_gpa equal ${stress_yy}*1e-4
variable stress_yy_gpa equal 30857.4995118484*1e-4
variable stress_zz_gpa equal ${stress_zz}*1e-4
variable stress_zz_gpa equal -9653.19510647439*1e-4
variable stress_xy_gpa equal ${stress_xy}*1e-4
variable stress_xy_gpa equal -1.72496117524564e-06*1e-4
variable stress_xz_gpa equal ${stress_xz}*1e-4
variable stress_xz_gpa equal -9.97911842506907e-05*1e-4
variable stress_yz_gpa equal ${stress_yz}*1e-4
variable stress_yz_gpa equal -0.000348161299056867*1e-4

# Method 2: Direct virial stress in eV/Å³ units, then convert to GPa
# 1 eV/Å³ = 160.217662 GPa
# 1 eV/Å³ = 1,602,177 bar (correct conversion factor)
# Virial stress = -(1/V) * Σ r_ij ⊗ F_ij (already calculated by LAMMPS)
# LAMMPS pressure is in bar, so convert bar to eV/Å³
variable stress_xx_ev_a3 equal ${stress_xx}/1602177.0
variable stress_xx_ev_a3 equal 30857.4996328524/1602177.0
variable stress_yy_ev_a3 equal ${stress_yy}/1602177.0
variable stress_yy_ev_a3 equal 30857.4995118484/1602177.0
variable stress_zz_ev_a3 equal ${stress_zz}/1602177.0
variable stress_zz_ev_a3 equal -9653.19510647439/1602177.0
variable stress_xy_ev_a3 equal ${stress_xy}/1602177.0
variable stress_xy_ev_a3 equal -1.72496117524564e-06/1602177.0
variable stress_xz_ev_a3 equal ${stress_xz}/1602177.0
variable stress_xz_ev_a3 equal -9.97911842506907e-05/1602177.0
variable stress_yz_ev_a3 equal ${stress_yz}/1602177.0
variable stress_yz_ev_a3 equal -0.000348161299056867/1602177.0

print "Virial stress tensor (GPa from bar):"
Virial stress tensor (GPa from bar):
print "sigma_xx = ${stress_xx_gpa}"
sigma_xx = 3.08574996328524
print "sigma_yy = ${stress_yy_gpa}"
sigma_yy = 3.08574995118484
print "sigma_zz = ${stress_zz_gpa}"
sigma_zz = -0.965319510647439
print "sigma_xy = ${stress_xy_gpa}"
sigma_xy = -1.72496117524564e-10
print "sigma_xz = ${stress_xz_gpa}"
sigma_xz = -9.97911842506907e-09
print "sigma_yz = ${stress_yz_gpa}"
sigma_yz = -3.48161299056867e-08

print "Virial stress tensor (eV/A^3):"
Virial stress tensor (eV/A^3):
print "sigma_xx = ${stress_xx_ev_a3}"
sigma_xx = 0.0192597319976834
print "sigma_yy = ${stress_yy_ev_a3}"
sigma_yy = 0.0192597319221587
print "sigma_zz = ${stress_zz_ev_a3}"
sigma_zz = -0.00602504910910242
print "sigma_xy = ${stress_xy_ev_a3}"
sigma_xy = -1.07663583689295e-12
print "sigma_xz = ${stress_xz_ev_a3}"
sigma_xz = -6.22847439769081e-11
print "sigma_yz = ${stress_yz_ev_a3}"
sigma_yz = -2.17305141102929e-10

# Print in matrix format for easy comparison
print "Virial stress matrix (GPa from bar):"
Virial stress matrix (GPa from bar):
print "${stress_xx_gpa} ${stress_xy_gpa} ${stress_xz_gpa}"
3.08574996328524 -1.72496117524564e-10 -9.97911842506907e-09
print "${stress_xy_gpa} ${stress_yy_gpa} ${stress_yz_gpa}"
-1.72496117524564e-10 3.08574995118484 -3.48161299056867e-08
print "${stress_xz_gpa} ${stress_yz_gpa} ${stress_zz_gpa}"
-9.97911842506907e-09 -3.48161299056867e-08 -0.965319510647439

print "Virial stress matrix (eV/A^3):"
Virial stress matrix (eV/A^3):
print "${stress_xx_ev_a3} ${stress_xy_ev_a3} ${stress_xz_ev_a3}"
0.0192597319976834 -1.07663583689295e-12 -6.22847439769081e-11
print "${stress_xy_ev_a3} ${stress_yy_ev_a3} ${stress_yz_ev_a3}"
-1.07663583689295e-12 0.0192597319221587 -2.17305141102929e-10
print "${stress_xz_ev_a3} ${stress_yz_ev_a3} ${stress_zz_ev_a3}"
-6.22847439769081e-11 -2.17305141102929e-10 -0.00602504910910242

print "LAMMPS ADP reference data generated"
LAMMPS ADP reference data generated
print "Total energy: $(etotal)"
Total energy: -53.49761014239944501
print "Potential energy: $(pe)"
Potential energy: -53.497610232881548598

Total wall time: 0:00:00
