LAMMPS (29 Aug 2024 - Update 3)
# LAMMPS input for ADP verification with stress calculation
# Generate reference data for comparison with GPUMD

# Initialize
units metal
dimension 3
boundary p p p
atom_style atomic
read_data  model_Ta_dump_idx10.dat
Reading data file ...
  triclinic box = (0 0 0) to (9.93 9.93 9.93) with tilt (0 0 0)
  1 by 1 by 1 MPI processor grid
  reading atoms ...
  54 atoms
  read_data CPU = 0.001 seconds
#lattice  bcc  3.31
#region box block 0 3 0 3 0 3
#create_box 1 box
#create_atoms 1 box

#mass 1 47.867    # titanium

# Use the same ADP potential
pair_style adp
#pair_coeff * *  Ta.adp.txt  Ta
pair_coeff * * CuTa_LJ15_2014.adp.txt Ta

# Set same temperature as GPUMD test
#velocity all create 300.0 12345
velocity all create 0.0001 12345

# Compute per-atom potential energy
compute eng all pe/atom
compute eatoms all reduce sum c_eng
compute pe all pe/atom

# Compute stress tensor
compute stress_tensor all stress/atom NULL virial
compute global_stress all reduce sum c_stress_tensor[1] c_stress_tensor[2] c_stress_tensor[3] c_stress_tensor[4] c_stress_tensor[5] c_stress_tensor[6]

# Set timestep and ensemble
timestep 0.001
fix 1 all nve

neighbor 0 bin

# Output settings
thermo 1
thermo_style custom step etotal pe lx ly lz press pxx pyy pzz pxy pxz pyz vol

# Dump forces, energies and stress for first step
dump 1 all custom 1 lammps_adp_reference.dump id element type x y z fx fy fz c_pe c_stress_tensor[1] c_stress_tensor[2] c_stress_tensor[3] c_stress_tensor[4] c_stress_tensor[5] c_stress_tensor[6]
dump_modify 1 element Ta sort id

# Run for 0 steps to get initial configuration stress
run 0
Neighbor list info ...
  update: every = 1 steps, delay = 0 steps, check = yes
  max neighbors/atom: 2000, page size: 100000
  master list distance cutoff = 6.150959
  ghost atom cutoff = 6.150959
  binsize = 3.0754795, bins = 4 4 4
  1 neighbor lists, perpetual/occasional/extra = 1 0 0
  (1) pair adp, perpetual
      attributes: half, newton on
      pair build: half/bin/atomonly/newton/tri
      stencil: half/bin/3d/tri
      bin: standard
Per MPI rank memory allocation (min/avg/max) = 6.584 | 6.584 | 6.584 Mbytes
   Step         TotEng         PotEng           Lx             Ly             Lz           Press           Pxx            Pyy            Pzz            Pxy            Pxz            Pyz           Volume    
         0  -437.25775     -437.25775      9.93           9.93           9.93          -10010.384     -9986.8248     -10010.273     -10034.054      29.829343      82.148739      20.058806      979.14666    
Loop time of 5.27e-07 on 1 procs for 0 steps with 54 atoms

379.5% CPU use with 1 MPI tasks x no OpenMP threads

MPI task timing breakdown:
Section |  min time  |  avg time  |  max time  |%varavg| %total
---------------------------------------------------------------
Pair    | 0          | 0          | 0          |   0.0 |  0.00
Neigh   | 0          | 0          | 0          |   0.0 |  0.00
Comm    | 0          | 0          | 0          |   0.0 |  0.00
Output  | 0          | 0          | 0          |   0.0 |  0.00
Modify  | 0          | 0          | 0          |   0.0 |  0.00
Other   |            | 5.27e-07   |            |       |100.00

Nlocal:             54 ave          54 max          54 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Nghost:            505 ave         505 max         505 min
Histogram: 1 0 0 0 0 0 0 0 0 0
Neighs:           1566 ave        1566 max        1566 min
Histogram: 1 0 0 0 0 0 0 0 0 0

Total # of neighbors = 1566
Ave neighs/atom = 29
Neighbor list builds = 0
Dangerous builds = 0

# Print stress tensor components
# Note: LAMMPS outputs pressure (with positive compression)
# Virial stress = -pressure, so we need to flip signs
variable stress_xx equal -pxx
variable stress_yy equal -pyy
variable stress_zz equal -pzz
variable stress_xy equal -pxy
variable stress_xz equal -pxz
variable stress_yz equal -pyz

print "=== LAMMPS ADP Virial Stress Results ==="
=== LAMMPS ADP Virial Stress Results ===
print "Virial stress tensor (bar):"
Virial stress tensor (bar):
print "sigma_xx = ${stress_xx}"
sigma_xx = 9986.82475115821
print "sigma_yy = ${stress_yy}"
sigma_yy = 10010.2734169964
print "sigma_zz = ${stress_zz}"
sigma_zz = 10034.0538548198
print "sigma_xy = ${stress_xy}"
sigma_xy = -29.8293425655948
print "sigma_xz = ${stress_xz}"
sigma_xz = -82.1487387446563
print "sigma_yz = ${stress_yz}"
sigma_yz = -20.0588055628919
print "Pressure = $(press)"
Pressure = -10010.384007658143673
print "Volume = $(vol)"
Volume = 979.1466570000000047

# Convert to GPa
# Method 1: From bar to GPa (1 bar = 1e-4 GPa)
variable stress_xx_gpa equal ${stress_xx}*1e-4
variable stress_xx_gpa equal 9986.82475115821*1e-4
variable stress_yy_gpa equal ${stress_yy}*1e-4
variable stress_yy_gpa equal 10010.2734169964*1e-4
variable stress_zz_gpa equal ${stress_zz}*1e-4
variable stress_zz_gpa equal 10034.0538548198*1e-4
variable stress_xy_gpa equal ${stress_xy}*1e-4
variable stress_xy_gpa equal -29.8293425655948*1e-4
variable stress_xz_gpa equal ${stress_xz}*1e-4
variable stress_xz_gpa equal -82.1487387446563*1e-4
variable stress_yz_gpa equal ${stress_yz}*1e-4
variable stress_yz_gpa equal -20.0588055628919*1e-4

# Method 2: Direct virial stress in eV/Å³ units, then convert to GPa
# 1 eV/Å³ = 160.217662 GPa
# 1 eV/Å³ = 1,602,177 bar (correct conversion factor)
# Virial stress = -(1/V) * Σ r_ij ⊗ F_ij (already calculated by LAMMPS)
# LAMMPS pressure is in bar, so convert bar to eV/Å³
variable stress_xx_ev_a3 equal ${stress_xx}/1602177.0
variable stress_xx_ev_a3 equal 9986.82475115821/1602177.0
variable stress_yy_ev_a3 equal ${stress_yy}/1602177.0
variable stress_yy_ev_a3 equal 10010.2734169964/1602177.0
variable stress_zz_ev_a3 equal ${stress_zz}/1602177.0
variable stress_zz_ev_a3 equal 10034.0538548198/1602177.0
variable stress_xy_ev_a3 equal ${stress_xy}/1602177.0
variable stress_xy_ev_a3 equal -29.8293425655948/1602177.0
variable stress_xz_ev_a3 equal ${stress_xz}/1602177.0
variable stress_xz_ev_a3 equal -82.1487387446563/1602177.0
variable stress_yz_ev_a3 equal ${stress_yz}/1602177.0
variable stress_yz_ev_a3 equal -20.0588055628919/1602177.0

print "Virial stress tensor (GPa from bar):"
Virial stress tensor (GPa from bar):
print "sigma_xx = ${stress_xx_gpa}"
sigma_xx = 0.998682475115821
print "sigma_yy = ${stress_yy_gpa}"
sigma_yy = 1.00102734169964
print "sigma_zz = ${stress_zz_gpa}"
sigma_zz = 1.00340538548198
print "sigma_xy = ${stress_xy_gpa}"
sigma_xy = -0.00298293425655948
print "sigma_xz = ${stress_xz_gpa}"
sigma_xz = -0.00821487387446563
print "sigma_yz = ${stress_yz_gpa}"
sigma_yz = -0.00200588055628919

print "Virial stress tensor (eV/A^3):"
Virial stress tensor (eV/A^3):
print "sigma_xx = ${stress_xx_ev_a3}"
sigma_xx = 0.00623328430701365
print "sigma_yy = ${stress_yy_ev_a3}"
sigma_yy = 0.00624791980973163
print "sigma_zz = ${stress_zz_ev_a3}"
sigma_zz = 0.00626276238818795
print "sigma_xy = ${stress_xy_ev_a3}"
sigma_xy = -1.86180069777526e-05
print "sigma_xz = ${stress_xz_ev_a3}"
sigma_xz = -5.12731981202179e-05
print "sigma_yz = ${stress_yz_ev_a3}"
sigma_yz = -1.25197188343684e-05

# Print in matrix format for easy comparison
print "Virial stress matrix (GPa from bar):"
Virial stress matrix (GPa from bar):
print "${stress_xx_gpa} ${stress_xy_gpa} ${stress_xz_gpa}"
0.998682475115821 -0.00298293425655948 -0.00821487387446563
print "${stress_xy_gpa} ${stress_yy_gpa} ${stress_yz_gpa}"
-0.00298293425655948 1.00102734169964 -0.00200588055628919
print "${stress_xz_gpa} ${stress_yz_gpa} ${stress_zz_gpa}"
-0.00821487387446563 -0.00200588055628919 1.00340538548198

print "Virial stress matrix (eV/A^3):"
Virial stress matrix (eV/A^3):
print "${stress_xx_ev_a3} ${stress_xy_ev_a3} ${stress_xz_ev_a3}"
0.00623328430701365 -1.86180069777526e-05 -5.12731981202179e-05
print "${stress_xy_ev_a3} ${stress_yy_ev_a3} ${stress_yz_ev_a3}"
-1.86180069777526e-05 0.00624791980973163 -1.25197188343684e-05
print "${stress_xz_ev_a3} ${stress_yz_ev_a3} ${stress_zz_ev_a3}"
-5.12731981202179e-05 -1.25197188343684e-05 0.00626276238818795

print "LAMMPS ADP reference data generated"
LAMMPS ADP reference data generated
print "Total energy: $(etotal)"
Total energy: -437.25774806244908177
print "Potential energy: $(pe)"
Potential energy: -437.25774874752784172

Total wall time: 0:00:00
